name: Build & Publish Image

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-publish-image:
    name: Build & Publish Image
    runs-on: ubuntu-22.04
    timeout-minutes: 240
    env:
      is_publishing: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - # only authenticate if publishing image
        name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        if: ${{ env.is_publishing == 'true' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: false

      - # Always authenticate to use the build cache
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Define Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            kula/onlaunch
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build And Push Image
        uses: docker/build-push-action@v4
        with:
          cache-from: type=registry,ref=ghcr.io/kula-app/onlaunch/onlaunch:buildcache
          cache-to: type=registry,ref=ghcr.io/kula-app/onlaunch/onlaunch:buildcache,mode=max
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: ${{ env.is_publishing == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
